from django.shortcuts import render
"""
render - объединяет данный шаблон с заданным контекстным словарем и возвращает объект HttpResponse 
с этим отображаемым текстом.
Django по умолчанию ищет все шаблоны папке templates, по этому в return не нужно указывать ее в адресе. 
""" 

# Create your views here.
"""
Posts_list функция обрабатывающая запрос принимает объект request.
если мы хотим что-то срендерить, в наш html документ, например переменную n с именем Сергей, то можем использовать словарь "context"
с привязкой к шаблону index.html через условно {{name}} в самом шлаблоне. 
в случае если переменной присвоен список значений, то он будет обрабатыватся в цикле в самом шаблоне, 
где выражением цикла является - {% for%}{% endfor%} c использованием цикла "for" для встроеного шаблонизатора Django:

{% for name is names %}
    <p>
        {{names}}
    </p>
{% endfor %}

где каждое значение будет циклично "обернуто" в теги <p></p>.
"""
def posts_list(request):
    n = ['Sergey', 'Toha','Max','Kostya']
    # Процесс наполнения шаблона данными называется "рендеринг" с использованием функции "render".
    return render(request, 'blog/index.html', context={'names': n})

